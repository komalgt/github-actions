# Code Generated by Sidekick is for learning and experimentation purposes only.
import smtplib
from email.mime.text import MIMEText

def send_failure_alert(subject, body, to_emails, from_email, smtp_server, smtp_port, smtp_user, smtp_password):
    msg = MIMEText(body)
    msg["Subject"] = subject
    msg["From"] = from_email
    msg["To"] = ', '.join(to_emails)  # To header as string

    try:
        with smtplib.SMTP(smtp_server, smtp_port) as server:
            server.starttls()
            server.login(smtp_user, smtp_password)
            server.sendmail(from_email, to_emails, msg.as_string())  # Pass full list for actual send
    except Exception as smtp_error:
        print(f"Failed to send emails alert: {smtp_error}")

# List of recipients (including duplicates)
TO_EMAILS = [
    "kturakannavar@deloitte.com"
]

FROM_EMAIL = "komalgt@gmail.com"
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
SMTP_USER = "komalgt@gmail.com"
SMTP_PASSWORD = "Gan@!9164"

try:
    raise Exception("Simulated workflow failure!")
except Exception as e:
    send_failure_alert(
        subject="Workflow Failure Alert",
        body=f"The workflow failed with error: {e}",
        to_emails=TO_EMAILS,
        from_email=FROM_EMAIL,
        smtp_server=SMTP_SERVER,
        smtp_port=SMTP_PORT,
        smtp_user=SMTP_USER,
        smtp_password=SMTP_PASSWORD
    )
